{
  "openapi": "3.0.1",
  "info": {
    "title": "OpenAPI Plant Store",
    "description": "A sample API that uses a plant store as an example to demonstrate features in the OpenAPI specification",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.myaifrontdeskdashboard.com"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/plants": {
      "get": {
        "description": "Returns all plants from the system that the user has access to",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Plant"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Creates a new plant in the store",
        "requestBody": {
          "description": "Plant to add to the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewPlant"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Plant"
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/plants/{id}": {
      "delete": {
        "description": "Deletes a single plant based on the ID supplied",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of plant to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Plant deleted",
            "content": {}
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users": {
      "post": {
        "description": "Creates a new Receptionist",
        "requestBody": {
          "description": "Receptionist's default configuration",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewReceptionist"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Receptionist response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Receptionist"
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Plant": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the plant",
            "type": "string"
          },
          "tag": {
            "description": "Tag to specify the type",
            "type": "string"
          }
        }
      },
      "NewPlant": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Plant"
          },
          {
            "required": ["id"],
            "type": "object",
            "properties": {
              "id": {
                "description": "Identification number of the plant",
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ]
      },
      "Error": {
        "required": ["error", "message"],
        "type": "object",
        "properties": {
          "error": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "Receptionist": {
        "required": ["id", "name", "emailAddress", "businessName", "businessType"],
        "type": "object",
        "properties": {
          "id": {
            "description": "Identification number of the receptionist",
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "description": "Name of the receptionist",
            "type": "string"
          },
          "emailAddress": {
            "description": "Email address of the receptionist",
            "type": "string"
          },
          "businessName": {
            "description": "Name of the business",
            "type": "string"
          },
          "businessType": {
            "description": "Type of the business",
            "type": "string"
          }
        }
      },
      "NewReceptionist": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Receptionist"
          },
          {
            "required": ["greetingPhrase"],
            "type": "object",
            "properties": {
              "greetingPhrase": {
                "description": "Greeting phrase for the receptionist",
                "type": "string"
              },
              "selectedLanguages": {
                "description": "Languages spoken by the receptionist",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "languageGreetings": {
                "description": "Greetings in different languages",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "workflows": {
                "description": "List of workflows",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "string"
                    },
                    "voiceResponse": {
                      "type": "string"
                    },
                    "textMessage": {
                      "type": "string"
                    }
                  }
                }
              },
              "callWorkflows": {
                "description": "List of call workflows",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "string"
                    },
                    "voiceResponse": {
                      "type": "string"
                    },
                    "workflowForwardingNumber": {
                      "type": "string"
                    },
                    "country": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "code": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "voiceSelected": {
                "description": "Voice selection details",
                "type": "object",
                "properties": {
                  "voiceId": {
                    "type": "string"
                  },
                  "provider": {
                    "type": "string"
                  }
                }
              },
              "chattiness": {
                "description": "Chattiness level of the receptionist",
                "type": "integer",
                "minimum": 0,
                "maximum": 100
              },
              "aiPrompt": {
                "description": "AI prompt for the receptionist",
                "type": "string"
              },
              "testingNumber": {
                "description": "Testing number for the receptionist",
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
