{
  "openapi": "3.0.1",
  "info": {
    "title": "OpenAPI Plant Store",
    "description": "A sample API that uses a plant store as an example to demonstrate features in the OpenAPI specification",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.myaifrontdeskdashboard.com"
    }
  ],
  "security": [
    {
      "basicAuth": []
    }
  ],
  "paths": {
    "/plants": {
      "get": {
        "description": "Returns all plants from the system that the user has access to",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Plant"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Creates a new plant in the store",
        "requestBody": {
          "description": "Plant to add to the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewPlant"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Plant"
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/plants/{id}": {
      "delete": {
        "description": "Deletes a single plant based on the ID supplied",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of plant to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Plant deleted",
            "content": {}
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users": {
      "post": {
        "description": "Creates a new Receptionist",
        "requestBody": {
          "description": "Receptionist's default configuration",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewReceptionist"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Receptionist response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Receptionist"
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Plant": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the plant",
            "type": "string"
          },
          "tag": {
            "description": "Tag to specify the type",
            "type": "string"
          }
        }
      },
      "NewPlant": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Plant"
          },
          {
            "required": ["id"],
            "type": "object",
            "properties": {
              "id": {
                "description": "Identification number of the plant",
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ]
      },
      "Receptionist": {
        "required": [
          "number",
          "username",
          "system_phrase",
          "business_information",
          "email_address",
          "business_name",
          "password",
          "sample_qa",
          "selected_languages",
          "language_greetings",
          "workflows",
          "callWorkflows",
          "chattiness",
          "ai_prompt",
          "voice_selected"
        ],
        "type": "object",
        "properties": {
          "number": {
            "description": "Username",
            "type": "string"
          },
          "username": {
            "description": "Username",
            "type": "string"
          },
          "system_phrase": {
            "description": "System phrase (newlines, carriage returns, and tabs removed)",
            "type": "string"
          },
          "business_information": {
            "description": "Company information",
            "type": "string"
          },
          "email_address": {
            "description": "Email address",
            "type": "string"
          },
          "business_name": {
            "description": "Business name (newlines, carriage returns, and tabs removed)",
            "type": "string"
          },
          "password": {
            "description": "Password",
            "type": "string"
          },
          "sample_qa": {
            "description": "Sample Q&A",
            "type": "string"
          },
          "selected_languages": {
            "description": "Selected languages",
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "English",
                "Spanish",
                "French",
                "German",
                "Mandarin",
                "Portuguese",
                "Japanese",
                "Arabic",
                "Russian",
                "Hindi",
                "Dutch"
              ]
            }
          },
          "language_greetings": {
            "description": "Mapping of Language to greeting string",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "workflows": {
            "description": "Workflow objects",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Workflow"
            }
          },
          "callWorkflows": {
            "description": "Call workflow objects",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CallWorkflow"
            }
          },
          "chattiness": {
            "description": "Chattiness level (integer)",
            "type": "string"
          },
          "ai_prompt": {
            "description": "AI prompt",
            "type": "string"
          },
          "voice_selected": {
            "description": "Voice selection object",
            "type": "string",
            "enum": [
              "aura-asteria-en",
              "aura-luna-en",
              "aura-stella-en",
              "aura-athena-en",
              "aura-orion-en",
              "aura-arcas-en",
              "aura-perseus-en",
              "aura-angus-en",
              "aura-helios-en"
            ]
          }
        }
      },
      "Workflow": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "voiceResponse": {
            "type": "string"
          },
          "textMessage": {
            "type": "string"
          }
        }
      },
      "CallWorkflow": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "voiceResponse": {
            "type": "string"
          },
          "workflowForwardingNumber": {
            "type": "string"
          },
          "country": {
            "$ref": "#/components/schemas/Country"
          }
        }
      },
      "Country": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "enum": [
              "United States (+1)",
              "United Kingdom (+44)",
              "Andorra (+376)",
              "Argentina (+54)",
              "Australia (+61)",
              "Vietnam (+84)",
              "n/a"
            ]
          },
          "code": {
            "type": "string",
            "enum": ["+1", "+44", "+376", "+54", "+61", "+84", ""]
          }
        }
      },
      "Error": {
        "required": ["error", "message"],
        "type": "object",
        "properties": {
          "error": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "NewReceptionist": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Receptionist"
          },
          {
            "required": ["id"],
            "type": "object",
            "properties": {
              "id": {
                "description": "Identification number of the receptionist",
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ]
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
